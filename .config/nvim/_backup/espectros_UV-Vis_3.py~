# _____________________________________________________________________________
# *****************************************************************************
# Autor: José Antonio Quiñonero gris
# Fecha de creación: 7 de mayo de 2022
# *****************************************************************************
# -----------------------------------------------------------------------------

# descripcion del programa

# Librerias
import numpy as np
import matplotlib.pyplot as plt

plt.style.use('mine')

# *****************************************************************************
# INICIO
# *****************************************************************************

nombre_grafica = 'espectros_UV-Vis_3.pdf'

fichero_datos = '../tablas/datos_espectros_metaloporfirinas.txt'
longitud_onda, H2TPP_G2, H2TPP_G6, CuTPP_G5, CuTPP_G8, NiTPP_G4, NiTPP_G7, ZnTPP_G3, ZnTPP_G9, protoporfirina_G1, H4TPP_G2 = np.loadtxt(fichero_datos, unpack=True, skiprows=2)

fichero_datos = '../tablas/UV-Vis_ZnTPP_G1.txt'
longitud_onda_2, ZnTPP_G1 = np.loadtxt(fichero_datos, unpack=True, skiprows=2)


# GRAFICA
xmin = 340
xmax = 760
ymin = -0.1
ymax = 2.7

fig, ax = plt.subplots()
fig.subplots_adjust(left=.15, bottom=.16, right=.99, top=.97)
grosor=1.2
ax.plot(longitud_onda, H2TPP_G2, lw=grosor, label='$\mathrm{H_2TPP}$ G2')
# ax.plot(longitud_onda, H2TPP_G6, lw=grosor, label='$\mathrm{H_2TPP}$ G6')

# ax.plot(longitud_onda, CuTPP_G5, lw=grosor, label='$\mathrm{[Cu(TPP)]}$ G5')
# ax.plot(longitud_onda, CuTPP_G8, lw=grosor, label='$\mathrm{[Cu(TPP)]}$ G8')

ax.plot(longitud_onda, NiTPP_G4, lw=grosor, label='$\mathrm{[Ni(TPP)]}$ G4')
ax.plot(longitud_onda, NiTPP_G7, lw=grosor, label='$\mathrm{[Ni(TPP)]}$ G7')

ax.plot(longitud_onda, ZnTPP_G3, lw=grosor, label='$\mathrm{[Zn(TPP)]}$ G3')
ax.plot(longitud_onda, ZnTPP_G9, lw=grosor, label='$\mathrm{[Zn(TPP)]}$ G9')

# ax.plot(longitud_onda, protoporfirina_G1, label='protoporfirina G1')

ax.plot(longitud_onda, H4TPP_G2, lw=grosor, label='$\mathrm{H_4TPP^{2+}}$ G2')

ax.set(xlabel=r'$\lambda$ (nm)', ylabel=r'Absorbancia (a.u.)')

ax.set_xlim(xmin,xmax)
ax.set_ylim(ymin,ymax)

# ax.text(0.02, 0.975, 'a)', fontsize=14, bbox=dict(facecolor='white', alpha=0.8), horizontalalignment='left', verticalalignment='top', transform=ax.transAxes)

ax.grid()

ax.legend(loc='upper right')

plt.savefig(nombre_grafica, transparent='True', bbox_inches='tight')
# plt.show()
